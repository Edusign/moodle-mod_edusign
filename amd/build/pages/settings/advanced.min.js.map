{"version":3,"file":"advanced.min.js","sources":["../../../src/pages/settings/advanced.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable promise/always-return */\n/* eslint-disable no-alert */\n\n/**\n * Allows status form elements to be modified.\n *\n * @module    mod_edusign\n * @author    SÃ©bastien Lampazona\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * Ex: https://moodledev.io/docs/guides/javascript/ajax\n */\n\n\nimport Ajax from 'core/ajax';\nimport * as Str from 'core/str';\n\nconst testApi = () => Ajax.call([{\n    methodname: 'mod_edusign_test_api',\n    args: {}\n}])[0];\n\n/**\n * Generates a random string.\n *\n * @returns {string} A random string.\n */\nfunction rand() {\n    return Math.random().toString(36).substring(2); // Remove `0.`\n}\n\n/**\n * Generates a token by concatenating three random numbers.\n *\n * @returns {string} The generated token.\n */\nfunction generateToken() {\n    return rand() + rand() + rand() + rand();\n}\n\n\nexport const init = async(webhookBaseUrl) => {\n    document.querySelector('#test-api-connection').addEventListener('click', () => {\n        testApi()\n            .then(async(data) => {\n                if (data?.error || !data?.result) {\n                    throw new Error(await Str.get_string('test_api_error', 'mod_edusign', data.error || 'API connection failed'));\n                }\n                alert(await Str.get_string('test_api_success', 'mod_edusign'));\n                return data;\n            })\n            .catch((response) => {\n                alert(response?.message || response.error);\n            });\n    });\n\n    const webhookTokenInput = document.querySelector('#id_webhook_token');\n    const webhookUrlInput = document.querySelector('#id_webhook_url');\n    const tokenRefreshBtn = document.querySelector('#id_refreshtoken');\n\n    webhookUrlInput.value = `${webhookBaseUrl}?token=${webhookTokenInput.value}`;\n\n    console.log('INIT', webhookBaseUrl, webhookTokenInput.value, webhookUrlInput.value);\n\n    webhookTokenInput.addEventListener('input', async(e) => {\n        webhookUrlInput.value = `${webhookBaseUrl}?token=${e.target.value}`;\n    });\n\n    tokenRefreshBtn.addEventListener('click', async() => {\n        webhookTokenInput.value = generateToken();\n        webhookUrlInput.value = `${webhookBaseUrl}?token=${webhookTokenInput.value}`;\n    });\n};\n"],"names":["rand","Math","random","toString","substring","async","document","querySelector","addEventListener","Ajax","call","methodname","args","then","data","error","result","Error","Str","get_string","alert","catch","response","message","webhookTokenInput","webhookUrlInput","tokenRefreshBtn","value","webhookBaseUrl","console","log","e","target"],"mappings":";;;;;;;;wjCA2BSA,cACEC,KAAKC,SAASC,SAAS,IAAIC,UAAU,iBAa5BC,MAAAA,iBAChBC,SAASC,cAAc,wBAAwBC,iBAAiB,SAAS,KAzBvDC,cAAKC,KAAK,CAAC,CAC7BC,WAAY,uBACZC,KAAM,MACN,GAwBSC,MAAKR,MAAAA,UACES,MAAAA,MAAAA,KAAMC,OAAUD,MAAAA,OAAAA,KAAME,aAChB,IAAIC,YAAYC,IAAIC,WAAW,iBAAkB,cAAeL,KAAKC,OAAS,iCAExFK,YAAYF,IAAIC,WAAW,mBAAoB,gBACxCL,QAEVO,OAAOC,WACJF,OAAME,MAAAA,gBAAAA,SAAUC,UAAWD,SAASP,mBAI1CS,kBAAoBlB,SAASC,cAAc,qBAC3CkB,gBAAkBnB,SAASC,cAAc,mBACzCmB,gBAAkBpB,SAASC,cAAc,oBAE/CkB,gBAAgBE,gBAAWC,iCAAwBJ,kBAAkBG,OAErEE,QAAQC,IAAI,OAAQF,eAAgBJ,kBAAkBG,MAAOF,gBAAgBE,OAE7EH,kBAAkBhB,iBAAiB,SAASH,MAAAA,IACxCoB,gBAAgBE,gBAAWC,iCAAwBG,EAAEC,OAAOL,UAGhED,gBAAgBlB,iBAAiB,SAASH,UACtCmB,kBAAkBG,MAhCf3B,OAASA,OAASA,OAASA,OAiC9ByB,gBAAgBE,gBAAWC,iCAAwBJ,kBAAkBG"}