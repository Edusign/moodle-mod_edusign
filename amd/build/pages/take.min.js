define("mod_edusign/pages/take",["exports","core/ajax","core/str","core/modal_save_cancel","core/modal_delete_cancel","core/modal","core/modal_events","../lib/dayjs","core/toast"],(function(_exports,_ajax,Str,_modal_save_cancel,_modal_delete_cancel,_modal,_modal_events,_dayjs,_toast){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Allows status form elements to be modified.
   *
   * @module    mod_edusign
   * @author    SÃ©bastien Lampazona
   * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   * Ex: https://moodledev.io/docs/guides/javascript/ajax
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_ajax=_interopRequireDefault(_ajax),Str=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(Str),_modal_save_cancel=_interopRequireDefault(_modal_save_cancel),_modal_delete_cancel=_interopRequireDefault(_modal_delete_cancel),_modal=_interopRequireDefault(_modal),_modal_events=_interopRequireDefault(_modal_events),_dayjs=_interopRequireDefault(_dayjs);const cmId=Number(document.querySelector(".students-table").dataset.instanceId),sessionId=Number(document.querySelector(".students-table").dataset.sessionId),sendStudentSignEmail=studentsId=>sendMethod("send_sign_email",studentsId).then((result=>(setTimeout((()=>{refreshView()}),4e3),result))),askUserSignature=async function(userType,user){let iframeURL=null;var teacherId,studentId;return iframeURL="student"===userType?await(studentId=user.edusign_api_id,_ajax.default.call([{methodname:"mod_edusign_get_signature_link_from_course",args:{sessionId:sessionId,userId:studentId,userType:"student"}}])[0].then((_ref=>{var _result$;let{result:result}=_ref;return null==result||null===(_result$=result[0])||void 0===_result$?void 0:_result$.SIGNATURE_LINK}))):await(teacherId=user.edusign_api_id,_ajax.default.call([{methodname:"mod_edusign_get_signature_link_from_course",args:{sessionId:sessionId,userId:teacherId,userType:"teacher"}}])[0].then((_ref2=>{var _result$2;let{result:result}=_ref2;return null==result||null===(_result$2=result[0])||void 0===_result$2?void 0:_result$2.SIGNATURE_LINK}))),_modal.default.create({title:"Signature",body:'\n            <iframe id="signature-iframe" src="'.concat(iframeURL,'"></iframe>\n        '),footer:"",show:!0,removeOnClose:!0}).then((modalInstance=>{modalInstance.getRoot().addClass("signature-modal"),modalInstance.getRoot().on(_modal_events.default.hidden,(()=>{refreshView()})),window.addEventListener("message",(_ref3=>{let{data:data}=_ref3;modalInstance.hide(),"accept-signature"===data&&refreshView()}))}))},openModalSetStudentEarlyDeparture=function(){return new Promise((resolve=>_modal_save_cancel.default.create({title:"Student early departure",body:'\n                <label for="input-early-departure">Early departure</label>\n                <div class="input-group mb-3" id="input-early-departure-container">\n                </div>\n            ',show:!0,removeOnClose:!0}).then((modalInstance=>{const selects=function(){let id=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"input-time",defaultValue=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(0,_dayjs.default)();const selectHour=document.createElement("select");selectHour.id="".concat(id,"-hour"),selectHour.classList.add("mr-2"),selectHour.classList.add("form-control");for(let hour=0;hour<=23;hour++){const option=document.createElement("option");option.value=hour.toString().padStart(2,"0"),option.textContent=hour.toString().padStart(2,"0")+" h",selectHour.appendChild(option)}const selectMinute=document.createElement("select");selectMinute.id="".concat(id,"-minutes");for(let minute=0;minute<=55;minute+=5){const option=document.createElement("option");option.value=minute.toString().padStart(2,"0"),option.textContent=minute.toString().padStart(2,"0")+" min",selectMinute.appendChild(option)}selectMinute.classList.add("form-control");const container=document.createElement("div");if(container.classList.add("input-group"),defaultValue.isValid()){selectHour.value=defaultValue.hour().toString().padStart(2,"0");const roundedMinutes=5*Math.round(defaultValue.minute()/5);60===roundedMinutes?(selectHour.value=(Number(selectHour.value)+1).toString().padStart(2,"0"),selectMinute.value="00"):selectMinute.value=roundedMinutes.toString().padStart(2,"0")}return container.appendChild(selectHour),container.appendChild(selectMinute),container}("input-early-departure");document.querySelector("#input-early-departure-container").appendChild(selects),modalInstance.getRoot().on(_modal_events.default.save,(()=>{const hour=document.querySelector("#input-early-departure-hour").value,minutes=document.querySelector("#input-early-departure-minutes").value,departureDate=(0,_dayjs.default)().hour(hour).minute(minutes);resolve(departureDate)}))}))))},sendMethod=function(methodName,studentsId){let args=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return _ajax.default.call([{methodname:"mod_edusign_take_attendance",args:{cmId:cmId,sessionId:sessionId,method:methodName,studentsId:studentsId.join(","),args:JSON.stringify(args||{})}}])[0].then((result=>(refreshView(),result)))},refreshView=()=>_ajax.default.call([{methodname:"mod_edusign_get_students_and_teachers",args:{cmId:cmId,sessionId:sessionId}}])[0].then((_ref4=>{let{result:result}=_ref4;return initTable(result.students),initTeachers(result.teachers),result})).catch((async error=>{console.error(error),(0,_toast.add)(await Str.get_string("refresh_error","mod_edusign",(null==error?void 0:error.message)||"An unknowed error has occured"),{type:"error"})})),initTeachers=function(teachers){const teachersList=document.querySelector("#teachersList");teachersList.innerHTML="";const template=document.querySelector("#teachers");teachers.forEach((teacher=>{const clone=template.content.cloneNode(!0),teacherCard=clone.querySelector(".teacher"),fullNameTeacher=clone.querySelector(".teacher--name>strong"),actionsTeacher=clone.querySelector(".teacher--actions"),teacherSignature=clone.querySelector(".teacher--signature-img");initActionButtonForTeacher(teacher,actionsTeacher),teacher.hasSigned?(actionsTeacher.remove(),teacherSignature.src=teacher.signature):teacherSignature.remove(),teacherCard.dataset.teacherId=teacher.edusign_api_id,fullNameTeacher.textContent=teacher.firstname+" "+teacher.lastname,teachersList.appendChild(clone)}))},initTable=async function(students){const tbody=document.querySelector("#studentListTbody");tbody.innerHTML="";const template=document.querySelector("#studentRow"),sortedStudentsPromise=students.sort(((a,b)=>a.firstname.localeCompare(b.firstname))).map((async student=>{var _student$edusign_data;const clone=template.content.cloneNode(!0),studentTR=clone.querySelector("tr"),checkboxTD=clone.querySelector(".user-checkbox"),fullNameTD=clone.querySelector(".fullname"),presentialStateTD=clone.querySelector(".presential-state"),actionsTD=clone.querySelector(".actions");return null!==(_student$edusign_data=student.edusign_data)&&void 0!==_student$edusign_data&&_student$edusign_data.signature&&(checkboxTD.setAttribute("disabled","disabled"),checkboxTD.setAttribute("data-toggle","tooltip"),checkboxTD.setAttribute("title","This student has already signed")),studentTR.dataset.studentId=student.edusign_api_id,fullNameTD.textContent=student.firstname+" "+student.lastname,presentialStateTD.innerHTML=await getStudentPresentialStateHTML(student),initActionButtonForStudent(student,actionsTD),clone})),allStudentsNodes=await Promise.all(sortedStudentsPromise);tbody.append(...allStudentsNodes),tbody.querySelectorAll(".user-checkbox").forEach((checkbox=>{checkbox.addEventListener("change",(function(){const signSelectedBtn=document.querySelector("#sign-selected-btn");tbody.querySelectorAll(".user-checkbox:checked").length>0?(signSelectedBtn.removeAttribute("disabled"),signSelectedBtn.removeAttribute("data-toggle")):(signSelectedBtn.setAttribute("disabled","disabled"),signSelectedBtn.setAttribute("data-toggle","tooltip"))}))}))},getStudentPresentialStateHTML=async function(student){var _student$edusign_data2,_student$edusign_data3;let html="",signatureHTML="";return student.edusign_data?student.edusign_data.signature?(html='<span class="badge badge-success">'.concat(await Str.get_string("present","mod_edusign"),"</span>"),signatureHTML='<img src="'.concat(student.edusign_data.signature,'" style="height: 50px" class="signature" />')):html=!student.edusign_data.signature&&student.edusign_data.signatureEmail?'<span class="badge badge-info">'.concat(await Str.get_string("waitingSignature","mod_edusign"),"</span>"):'<span class="badge badge-danger">Absent</span>':html='<span class="badge badge-default">'.concat(await Str.get_string("noData","mod_edusign"),"</span>"),(null===(_student$edusign_data2=student.edusign_data)||void 0===_student$edusign_data2?void 0:_student$edusign_data2.delay)>0&&(html+='<span class="text-small text-muted">'.concat(student.edusign_data.delay," ").concat(await Str.get_string("minLate","mod_edusign"),"</span>")),null!==(_student$edusign_data3=student.edusign_data)&&void 0!==_student$edusign_data3&&_student$edusign_data3.earlyDeparture&&(html+='<span class="text-small text-muted">'.concat(await Str.get_string("departureAt","mod_edusign")," ").concat((0,_dayjs.default)(student.edusign_data.earlyDeparture).format("HH:mm")," (").concat((0,_dayjs.default)(session.date_end).diff((0,_dayjs.default)(student.edusign_data.earlyDeparture),"minutes")," min)</span>")),'<div class="state-container">\n                <div class="left-container">'.concat(html,'</div>\n                <div class="right-container">').concat(signatureHTML,"</div>\n            </div>")},initActionButtonForTeacher=function(teacher,context){context.querySelector(".manual-sign-btn--teacher").addEventListener("click",(function(){askUserSignature("teacher",teacher)}))},initActionButtonForStudent=function(student,context){context.querySelector(".manual-sign-btn").addEventListener("click",(function(){askUserSignature("student",student)})),context.querySelector(".send-sign-email-btn").addEventListener("click",(function(){sendStudentSignEmail([student.edusign_api_id]).then((async data=>((0,_toast.add)(await Str.get_string("send_sign_email_success","mod_edusign"),{type:"success"}),data))).catch((async error=>{console.error(error),(0,_toast.add)(await Str.get_string("send_sign_email_error","mod_edusign",(null==error?void 0:error.message)||"An unknowed error has occured"),{type:"error"})}))})),context.querySelector(".justified-abscence-btn").addEventListener("click",(function(){new Promise((resolve=>_modal_save_cancel.default.create({title:"Student absence",body:'\n                <textarea placeholder="Add a comment for this absence (optionnaly)" class="form-control" id="input-comment" aria-label="Comment for absence"></textarea>\n            ',show:!0,removeOnClose:!0}).then((modalInstance=>{modalInstance.getRoot().on(_modal_events.default.save,(()=>{resolve(document.querySelector("#input-comment").value)}))})))).then((comment=>((studentId,comment)=>sendMethod("set_student_absent",[studentId],{comment:comment}))(student.edusign_api_id,comment))).then((async data=>((0,_toast.add)(await Str.get_string("set_student_absent_success","mod_edusign"),{type:"success"}),data))).catch((async error=>{console.error(error),(0,_toast.add)(await Str.get_string("set_student_absent_error","mod_edusign",(null==error?void 0:error.message)||"An unknowed error has occured"),{type:"error"})}))})),context.querySelector(".late-btn").addEventListener("click",(function(){new Promise((resolve=>_modal_save_cancel.default.create({title:"Student delay",body:'\n                <label for="input-delay">Delay</label>\n                <div class="input-group mb-3">\n                    <input type="number" class="form-control" id="input-delay" aria-label="Minutes of delay">\n                    <div class="input-group-append">\n                        <span class="input-group-text">minutes</span>\n                    </div>\n                </div>\n            ',show:!0,removeOnClose:!0}).then((modalInstance=>{modalInstance.getRoot().on(_modal_events.default.save,(()=>{resolve(Number(document.querySelector("#input-delay").value))}))})))).then((delay=>function(){return sendMethod("set_student_delay",[arguments.length>1?arguments[1]:void 0],{delay:arguments.length>0&&void 0!==arguments[0]?arguments[0]:15})}(delay,student.edusign_api_id))).then((async data=>((0,_toast.add)(await Str.get_string("set_student_delay_success","mod_edusign"),{type:"success"}),data))).catch((async error=>{console.error(error),(0,_toast.add)(await Str.get_string("set_student_delay_error","mod_edusign",(null==error?void 0:error.message)||"An unknowed error has occured"),{type:"error"})}))})),context.querySelector(".early-departure-btn").addEventListener("click",(function(){openModalSetStudentEarlyDeparture().then((earlyDeparture=>sendMethod("set_student_early_departure",[student.edusign_api_id],{earlyDeparture:earlyDeparture.toISOString()}))).then((async data=>((0,_toast.add)(await Str.get_string("set_student_early_departure_success","mod_edusign"),{type:"success"}),data))).catch((async error=>{console.error(error),(0,_toast.add)(await Str.get_string("set_student_early_departure_error","mod_edusign",(null==error?void 0:error.message)||"An unknowed error has occured"),{type:"error"})}))}))},initArchiveButton=function(){document.querySelector("#archive-session-btn").addEventListener("click",(function(){return new Promise((async(resolve,reject)=>_modal_delete_cancel.default.create({title:await Str.get_string("archiveSession","mod_edusign"),body:"\n                    <p>".concat(await Str.get_string("archiveSessionQuestion","mod_edusign"),"</p>\n                "),show:!0,removeOnClose:!0,buttons:{delete:await Str.get_string("archive","mod_edusign")}}).then((modalInstance=>(modalInstance.getRoot().on(_modal_events.default.delete,(()=>{!function(){let archiveState=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];_ajax.default.call([{methodname:"mod_edusign_archive_session",args:{sessionId:sessionId,archiveState:archiveState}}])[0].then((result=>(window.location.href="/mod/edusign/view.php?id="+cmId,result)))}()})),modalInstance))).then(resolve).catch(reject)))}))};let course=null,session=null;_exports.init=async(students,teachers,_course,_session)=>{course=_course,session=_session,initTable(students),initTeachers(teachers),document.querySelector("#main-checkbox").addEventListener("change",(function(){document.querySelectorAll(".user-checkbox:not([disabled])").forEach((checkbox=>{checkbox.checked=this.checked,checkbox.dispatchEvent(new Event("change"))}))})),document.querySelector("#refresh-button").addEventListener("click",(function(){refreshView()})),document.querySelector("#sign-selected-btn").addEventListener("click",(function(){const studentsId=Array.from(document.querySelectorAll(".user-checkbox:checked")).map((checkbox=>checkbox.closest("tr").dataset.studentId));sendStudentSignEmail(studentsId).then((async()=>(document.querySelector("#main-checkbox").checked=!1,document.querySelector("#main-checkbox").dispatchEvent(new Event("change")),(0,_toast.add)(await Str.get_string("send_sign_email_success","mod_edusign"),{type:"success"})))).catch((async data=>{(0,_toast.add)(await Str.get_string("send_sign_email_error","mod_edusign",(null==data?void 0:data.error)||"An unknowed error has occured"),{type:"error"})}))})),initArchiveButton()}}));

//# sourceMappingURL=take.min.js.map