{"version":3,"file":"sessions.min.js","sources":["../../src/pages/sessions.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\n/* eslint-disable promise/no-nesting */\nimport Ajax from 'core/ajax';\nimport * as Str from 'core/str';\nimport notification from 'core/notification';\nimport ModalDeleteCancel from 'core/modal_delete_cancel';\n// Import Modal from 'core/modal';\nimport ModalEvents from 'core/modal_events';\n\nconst removeSession = function(sessionId, removeOnEdusign = true) {\n    return Ajax.call([{\n        methodname: 'mod_edusign_remove_session',\n        args: {\n            sessionId,\n            withEdusignDelete: removeOnEdusign,\n        }\n    }])[0];\n};\n\nconst askRemoveSession = function(sessionId) {\n    return new Promise((resolve, reject) => {\n        return ModalDeleteCancel.create({\n            title: 'Remove session',\n            body: (`\n                <p>Vous êtes sur le point de supprimer une session. Êtes-vous sûr de vouloir continuer ?</p>\n                <div class=\"form-check form-switch\">\n                    <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"removeOnEdusign\" checked>\n                    <label class=\"form-check-label\" for=\"removeOnEdusign\">\n                        Supprimer aussi la feuille de présence sur Edusign ( Attention, action irréversible )\n                    </label>\n                </div>\n            `),\n            show: true,\n            removeOnClose: true,\n        }).then((modalInstance) => {\n            modalInstance.getRoot().on(ModalEvents.delete, () => {\n                const removeOnEdusign = document.querySelector('#removeOnEdusign').checked;\n                removeSession(sessionId, removeOnEdusign)\n                    .then(resolve)\n                    .catch(reject);\n            });\n            return modalInstance;\n        });\n    });\n};\n\nexport const init = async() => {\n\n    // Gestion de la suppression d'une session\n    const removeButtons = document.querySelectorAll('.remove-session');\n    removeButtons.forEach((button) => {\n        button.addEventListener('click', async(event) => {\n            event.preventDefault();\n            const sessionId = button.closest('tr').dataset.sessionId;\n            await askRemoveSession(sessionId)\n                .then(async() => {\n                    return window.location.reload();\n                })\n                .catch(async(data) => {\n                    notification.addNotification({\n                        message: await Str.get_string(\n                            'session_removed_error',\n                            'mod_edusign',\n                            data?.error || 'An unknowed error has occured'\n                        ),\n                        type: 'error'\n                    });\n                });\n        });\n    });\n};\n"],"names":["askRemoveSession","sessionId","Promise","resolve","reject","ModalDeleteCancel","create","title","body","show","removeOnClose","then","modalInstance","getRoot","on","ModalEvents","delete","removeOnEdusign","document","querySelector","checked","Ajax","call","methodname","args","withEdusignDelete","removeSession","catch","async","querySelectorAll","forEach","button","addEventListener","event","preventDefault","closest","dataset","window","location","reload","addNotification","message","Str","get_string","data","error","type"],"mappings":"q/CAoBMA,iBAAmB,SAASC,kBACvB,IAAIC,SAAQ,CAACC,QAASC,SAClBC,6BAAkBC,OAAO,CAC5BC,MAAO,iBACPC,4hBASAC,MAAM,EACNC,eAAe,IAChBC,MAAMC,gBACLA,cAAcC,UAAUC,GAAGC,sBAAYC,QAAQ,WACrCC,gBAAkBC,SAASC,cAAc,oBAAoBC,SA3B7D,SAASnB,eAAWgB,kFAC/BI,cAAKC,KAAK,CAAC,CACdC,WAAY,6BACZC,KAAM,CACFvB,UAAAA,UACAwB,kBAAmBR,oBAEvB,IAqBQS,CAAczB,UAAWgB,iBACpBN,KAAKR,SACLwB,MAAMvB,WAERQ,kCAKCgB,UAGMV,SAASW,iBAAiB,mBAClCC,SAASC,SACnBA,OAAOC,iBAAiB,SAASJ,MAAAA,QAC7BK,MAAMC,uBACAjC,UAAY8B,OAAOI,QAAQ,MAAMC,QAAQnC,gBACzCD,iBAAiBC,WAClBU,MAAKiB,SACKS,OAAOC,SAASC,WAE1BZ,OAAMC,MAAAA,6BACUY,gBAAgB,CACzBC,cAAeC,IAAIC,WACf,wBACA,eACAC,MAAAA,YAAAA,KAAMC,QAAS,iCAEnBC,KAAM"}